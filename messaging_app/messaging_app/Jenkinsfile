pipeline {
    agent any

    environment {
        PROJECT_ROOT = 'messaging-app'
        IMAGE_NAME= 'enos137/messaging-app:latest'
    }

    stages {
        stage('Checkout code') {
            steps {
                echo 'Checking out code from GitHub...'
                git branch: 'main',
                    url: 'https://github.com/Vallor23/alx-backend-python.git',
                    credentialsId: 'github-ssh-key'
            }
        }
        stage('Install dependencies & Run Tests') {
            steps {
                echo 'Installing dependencies and running tests...'
                script {
                    docker.image('python:3.10').inside {
                        dir ("${PROJECT_ROOT}") {
                            sh '''
                                python -m venv venv
                                . venv/bin/activate
                                pip install --upgrade pip
                                pip install -r requirements.txt
                                mkdir -p reports
                                pytest --junitxml=reports/test-results.xml
                            '''
                        }
                    }  
                }
            }
        }
        stage('Build Docker image') {
            steps {
                echo 'Building Docker image...'
                script {
                    def appImage= docker build ("${IMAGE_NAME}", "${PROJECT_ROOT}")
                }
            }
        }
        stage('Push to Docker Hub') {
            steps {
                echo 'Pushing Docker image to Docker Hub...'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-creds') {
                        appImage.push()
                    }
                }
            }
        }
        stage('Publish Test Report') {
            steps {
                junit 'reports/test-results.xml'
            }
        }
    }
    
    post {
        always {
            archiveArtifacts artifacts: 'reports/test-results.xml', allowEmptyArchive: true
        }
    }
}